{"version":3,"file":"static/js/304.8b296eb0.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGallery.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","utils/movies-api.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled.div`\n  text-align: center;\n  border: 1px solid #8abdff66;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-shadow: inset 0px -21px 31px -13px #675101;\n  -moz-box-shadow: inset 0px -21px 31px -13px #675101;\n  box-shadow: inset 0px -21px 31px -13px #675101;\n`;\n\nexport const MovieItemImage = styled.img`\n  width: 100%;\n  height: 320px;\n  object-fit: cover;\n`;\n\nexport const CardInfo = styled.div`\n  display: flex;\n  align-self: center;\n  align-items: center;\n  font-size: 16px;\n  padding: 5px 0;\n  height: 79px;\n  color: #dfdfdf;\n`;\n\nexport const StyledLink = styled(Link)`\n  height: 100%;\n  color: #1d1d1d;\n  background-color: #071227;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  CardInfo,\n  MovieItem,\n  MovieItemImage,\n  StyledLink,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ id, title, poster }) => {\n  const location = useLocation();\n\n  return (\n    <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n      <MovieItem>\n        <MovieItemImage\n          src={\n            poster\n              ? `http://image.tmdb.org/t/p/w500/${poster}`\n              : 'https://www.kevingage.com/assets/clapboard.png'\n          }\n          alt={title}\n        />\n\n        <CardInfo>\n          <p>{title}</p>\n        </CardInfo>\n      </MovieItem>\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MoviesContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 16px;\n  grid-row-gap: 32px;\n`;\n","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport { MoviesContainer } from './MoviesGallery.styled';\n\nexport const MoviesGallery = ({ movies }) => {\n  return (\n    <MoviesContainer>\n      {movies.map(({ id, title, poster_path }) => {\n        return (\n          <MovieCard key={id} id={id} title={title} poster={poster_path} />\n        );\n      })}\n    </MoviesContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const PageTitle = styled.h1`\n  color: #dfdfdf;\n  margin-bottom: 30px;\n  text-align: center;\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from '../../utils/movies-api';\n\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { PageTitle } from './Home.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n\n      try {\n        const result = await fetchTrendingMovies();\n        setTrendingMovies(result);\n      } catch (error) {\n        alert(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <div>\n      <PageTitle>Trending today</PageTitle>\n      <MoviesGallery movies={trendingMovies} />\n      {isLoading && <Loader />}\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7091a56798b3dae7162597c32527055c';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport const fetchTrendingMovies = async () => {\n  return await axios\n    .get(`/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.data.results);\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.data);\n};\n\nexport const fetchActors = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.data.cast);\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios\n    .get(`/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n\nexport const fetchMoviesByQuery = async query => {\n  return await axios\n    .get(`/3/search/movie?query=${query}&api_key=${API_KEY}`)\n    .then(r => r.data.results);\n};\n"],"names":["MovieItem","styled","_templateObject","_taggedTemplateLiteral","MovieItemImage","_templateObject2","CardInfo","_templateObject3","StyledLink","Link","_templateObject4","MovieCard","_ref","id","title","poster","location","useLocation","_jsx","to","concat","state","from","children","_jsxs","src","alt","MoviesContainer","MoviesGallery","movies","map","_ref2","poster_path","PageTitle","Home","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","result","_context","prev","next","fetchTrendingMovies","sent","t0","alert","message","finish","stop","apply","arguments","getMovies","Loader","API_KEY","axios","then","response","data","results","abrupt","fetchMovieDetailsById","_callee2","movieId","_context2","r","_x","fetchActors","_ref3","_callee3","_context3","cast","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_context5","_x4"],"sourceRoot":""}